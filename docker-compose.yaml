services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sistema_certificados
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    volumes:
      - mysql_data:/var/lib/mysql
      # Montar o script DDL no diretório correto no docker dps dos ":"
      - ./mysql/bd.sql:/docker-entrypoint-initdb.d/bd.sql 
    ports:
      - "3306:3306"

  puppeteer:
    image: 'node:14'  # ou qualquer outra imagem que você esteja usando
    working_dir: /worker
    volumes:
      - ./worker:/worker  # se você tem a aplicação local em ./app
      - puppeteer_data:/var/lib/puppeteer  # volume para cache do Puppeteer
    #command: node ./pdfGenerate.js  # ou o comando que você vai rodar para usar o Puppeteer
    environment:
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium  # caminho do Chromium, se necessário
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true  # se você não quer que o Puppeteer baixe o Chromium

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=userpassword
      - DB_DATABASE=sistema_certificados
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "8080:8080"
    volumes:
      - ./arquivos:/arquivos

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - mysql
      - rabbitmq

volumes:
  mysql_data:
  rabbitmq_data:
  puppeteer_data:
